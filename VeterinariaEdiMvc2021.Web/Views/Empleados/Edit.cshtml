@model VeterinariaEdiMvc2021.Entidades.ViewModels.Empleado.EmpleadoEditViewModel

@using (Html.BeginForm("Edit", "Empleados", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.EmpleadoId)
    <div class="form-horizontal">
        <h4>Empleado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoDeDocumentoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TipoDeDocumentoId, new SelectList(Model.TipoDeDocumento, "TipoDeDocumentoId", "Descripcion"), "Seleccione Tipo de Documento", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoDeDocumentoId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NumeroDocumento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumeroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumeroDocumento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ProvinciaId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProvinciaId, new SelectList(Model.Provincia, "ProvinciaId", "NombreProvincia"), "Seleccione Provincia", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProvinciaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocalidadId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.LocalidadId, new SelectList(Model.Localidad, "LocalidadId", "NombreLocalidad"), "Seleccione Localidad", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocalidadId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.TelefonoFijo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelefonoFijo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelefonoFijo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TelefonoMovil, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TelefonoMovil, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelefonoMovil, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoDeTareaId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TipoDeTareaId, new SelectList(Model.TipoDeTarea, "TipoDeTareaId", "Descripcion"), "Seleccione Tipo de tarea", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TipoDeTareaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="well">
                    <img id="imgSalida" src="@Url.Content($"~/Content/Imagenes/Empleado/{Model.Imagen}")" alt="Imagen" style="width: 50%">
                    <div class="caption">
                        <p>@Model.Imagen</p>
                    </div>
                    <span class="btn btn-default btn-file" id="file-input">
                        @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file" })
                    </span>
                </div>
                <br>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-warning" />
                @Html.ActionLink("Volver", "Index", "", new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}

@section scripts
{
    <script>
        $(document).ready(function() {
            $("#ProvinciaId").change(function() {
                $("#LocalidadId").empty();
            });

            $("#ProvinciaId").change(function() {
                $("#LocalidadId").empty();
                $("#LocalidadId").append('<option value="0">[Seleccionar Localidad]</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLocalidades")',
                    dataType: 'json',
                    data: {
                        provinciaId: $("#ProvinciaId").val()

                    },
                    success: function(localidades) {
                        $.each(localidades,
                            function(i, localidad) {
                                $("#LocalidadId").append('<option value="' + localidad.LocalidadId + '">' + localidad.NombreLocalidad + '</option>');
                            });
                    },
                    error: function(ex) {
                        alert('Error al intentar cargar las localidades.' + ex);
                    }
                });
                return false;
            });
        });

    </script>

    <script>
        $(document).ready(function () {
            $('#file-input').change(function (e) {
                addImage(e);
            });

            function addImage(e) {
                var file = e.target.files[0],
                    imageType = /image.*/;

                if (!file.type.match(imageType))
                    return;

                var reader = new FileReader();
                reader.onload = fileOnload;
                reader.readAsDataURL(file);
            }

            function fileOnload(e) {
                var result = e.target.result;
                $('#imgSalida').attr("src", result);
            }

        });


    </script>

}
